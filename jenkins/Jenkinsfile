properties([
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '1', numToKeepStr: '1')),
])

pipeline {
    agent any
    
    environment {
        // Define initial version number
        VERSION = '1.0.0'
        
        // Get the last commit message
        LAST_COMMIT = sh(returnStdout: true, script: 'git log -1 --pretty=%B').trim()
    }
    
    stages {
        
       stage('Version') {
            steps {
                script {
             def version = new VersionNumber(VERSION)
             if (LAST_COMMIT.contains('major')) {
             version.incrementMajorVersion()
            } else if (LAST_COMMIT.contains('minor')) {
                version.incrementMinorVersion()
            } else {
                version.incrementBugfixVersion()
            }
            VERSION = version.toString()
            echo "New version is ${VERSION}"
        }
                }
                
                // Print the new version
                echo "New version is ${VERSION}"
            }
        }
        
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests -Dversion=${VERSION} clean package'
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh' //test
            }
        }
    }
