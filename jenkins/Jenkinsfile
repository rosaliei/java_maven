properties([
	buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '1', numToKeepStr: '1')),
])

pipeline {
    agent any
    
	environment {
	 
		now = sh (
			returnStdout: true,
			script: """
			echo \$(date "+%Y%m%d-%H%M")
			"""
		).trim()

	}
    
    stages {
        
       stage('Version') {
            steps {
                echo "next version is blah blah blah"
		    
        script {
          def lastCommit = sh(returnStdout: true, script: 'git log -1 --pretty=%B').trim()
          echo "Last commit message: ${lastCommit}"
        }
        // Generate semantic version number based on commit message
        script {
          def version = semVer(
            increment: semverIncrement(lastCommit),
            majorVersion: 1,
            minorVersion: 0,
            patchVersion: 0
          )
          env.VERSION = version.toString()
	}	    
		    
            }
	    
        }
        
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Delivers') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
}
